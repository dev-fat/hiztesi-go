{"ast":null,"code":"import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { Formik, Form, Field, ErrorMessage, getIn } from 'formik';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction getStyles(errors, fieldName) {\n  if (getIn(errors, fieldName)) {\n    return {\n      borderColor: '#ff3366'\n    };\n  }\n}\n\nexport default function Login() {\n  var router = useRouter();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\"\n  }, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"title\", null, \"H\\u0131zTesti App - Giri\\u015F\"), /*#__PURE__*/React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: \"My page title\",\n    key: \"title\"\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: \"My page description\",\n    key: \"description\"\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  }), /*#__PURE__*/React.createElement(\"script\", {\n    async: true,\n    src: \"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"\n  })), /*#__PURE__*/React.createElement(Header, null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-section\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"signIn\"\n  })), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        errors.email = 'E-Posta adresi zorunludur.';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"invalidEmail\"\n        });\n      }\n\n      if (!values.password) {\n        errors.password = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"passwordRequired\"\n        });\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    render: function render(formProps) {\n      return /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"action-message action-message--error\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"invalidInfo\"\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"email\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"email\",\n        name: \"email\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'email')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"password\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"password\",\n        name: \"password\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'password')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"multi-field\"\n      }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(Field, {\n        type: \"checkbox\",\n        name: \"remember\",\n        className: \"field-checkbox checkbox-input\"\n      }), /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"rememberMe\"\n      }))), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        className: \"forgot-password\",\n        onClick: function onClick() {\n          return router.push('/forgot-password');\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"areYouMissingPassword\"\n      })))), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"signIn\"\n      })));\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-desc\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"signIn01\"\n  })), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"signIn02\"\n  })), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"signIn03\"\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button\",\n    onClick: function onClick() {\n      return router.push('/register');\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"signIn04\"\n  }))))), /*#__PURE__*/React.createElement(Footer, null));\n}","map":{"version":3,"sources":["/var/www/html/pages/login.js"],"names":["React","FormattedMessage","Head","useRouter","Formik","Form","Field","ErrorMessage","getIn","Header","Footer","getStyles","errors","fieldName","borderColor","Login","router","email","password","values","test","setSubmitting","setTimeout","alert","JSON","stringify","formProps","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\n\nimport { Formik, Form, Field, ErrorMessage, getIn } from 'formik';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction getStyles(errors, fieldName) {\n  if (getIn(errors, fieldName)) {\n    return {\n      borderColor: '#ff3366'\n    }\n  }\n}\n\nexport default function Login() {\n  const router = useRouter()\n\n  return (\n    <div className=\"page\">\n      <Head>\n        <title>HızTesti App - Giriş</title>\n        <meta property=\"og:title\" content=\"My page title\" key=\"title\" />\n        <meta property=\"og:description\" content=\"My page description\" key=\"description\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n      </Head>\n      <Header />\n      <div className=\"wrapper\">\n        <div className=\"login-section\">\n          <div className=\"form\">\n            <div className=\"hero\"><FormattedMessage id=\"signIn\" /></div>\n            <Formik\n              initialValues={{ email: '', password: '' }}\n              validate={values => {\n                const errors = {};\n                if (!values.email) {\n                  errors.email = 'E-Posta adresi zorunludur.';\n                } else if (\n                  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                ) {\n                  errors.email = <FormattedMessage id=\"invalidEmail\" />;\n                }\n                if (!values.password) {\n                  errors.password = <FormattedMessage id=\"passwordRequired\" />;\n                }\n                return errors;\n              }}\n              onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                  alert(JSON.stringify(values, null, 2));\n                  setSubmitting(false);\n                }, 400);\n              }}\n              render={formProps => {\n                return (\n                  <Form>\n                    <div className=\"action-message action-message--error\">\n                      <FormattedMessage id=\"invalidInfo\" />\n                    </div>\n                    <div className=\"field\">\n                      <label className=\"field-label\"><FormattedMessage id=\"email\" /></label>\n                      <Field type=\"email\" name=\"email\" className=\"field-input\" style={getStyles(formProps.errors, 'email')} />\n                    </div>\n                    <ErrorMessage name=\"email\" component=\"div\" className=\"error-input\" />\n                    <div className=\"field\">\n                      <label className=\"field-label\"><FormattedMessage id=\"password\" /></label>\n                      <Field type=\"password\" name=\"password\" className=\"field-input\" style={getStyles(formProps.errors, 'password')} />\n                    </div>\n                    <ErrorMessage name=\"password\" component=\"div\" className=\"error-input\" />\n                    <div className=\"multi-field\">\n                      <div>\n                        <label>\n                          <Field type=\"checkbox\" name=\"remember\" className=\"field-checkbox checkbox-input\" />\n                          <FormattedMessage id=\"rememberMe\" />\n                        </label>\n                      </div>\n                      <div>\n                        <a href=\"#\" className=\"forgot-password\" onClick={() => router.push('/forgot-password')}><FormattedMessage id=\"areYouMissingPassword\" /></a>\n                      </div>\n                    </div>\n                    <button type=\"submit\">\n                      <FormattedMessage id=\"signIn\" />\n                    </button>\n                  </Form>\n                );                \n              }}\n            />\n          </div>\n          <div className=\"form-desc\">\n            <div className=\"hero\"><FormattedMessage id=\"signIn01\" /></div>\n            <p><FormattedMessage id=\"signIn02\" /></p>\n            <p><FormattedMessage id=\"signIn03\" /></p>\n            <span className=\"button\" onClick={() => router.push('/register')}>\n              <FormattedMessage id=\"signIn04\" />\n            </span>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}