{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Head from 'next/head';\nimport { FormattedMessage } from 'react-intl';\nimport { useRouter } from 'next/router';\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage, getIn } from 'formik';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction getStyles(errors, fieldName) {\n  if (getIn(errors, fieldName)) {\n    return {\n      borderColor: '#ff3366'\n    };\n  }\n}\n\nvar servers = [{\n  location: 'İstanbul',\n  server: 'Radore'\n}, {\n  location: 'İstanbul',\n  server: 'Doruknet'\n}, {\n  location: 'İstanbul',\n  server: 'Vodafone'\n}, {\n  location: 'İstanbul',\n  server: 'Turkcell Superonline'\n}, {\n  location: 'İstanbul',\n  server: 'Turknet'\n}, {\n  location: 'Bursa',\n  server: 'DGN Teknoloji'\n}, {\n  location: 'İstanbul',\n  server: 'Radore'\n}, {\n  location: 'İstanbul',\n  server: 'Doruknet'\n}, {\n  location: 'İstanbul',\n  server: 'Vodafone'\n}, {\n  location: 'İstanbul',\n  server: 'Turkcell Superonline'\n}, {\n  location: 'İstanbul',\n  server: 'Turknet'\n}, {\n  location: 'Bursa',\n  server: 'DGN Teknoloji'\n}];\nexport default function Settings() {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      keyword = _useState4[0],\n      setKeyword = _useState4[1];\n\n  var router = useRouter();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\"\n  }, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"title\", null, \"H\\u0131zTesti App - Ayarlar\"), /*#__PURE__*/React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: \"My page title\",\n    key: \"title\"\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: \"My page description\",\n    key: \"description\"\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  }), /*#__PURE__*/React.createElement(\"script\", {\n    async: true,\n    src: \"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"\n  })), /*#__PURE__*/React.createElement(Header, null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-page\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"speed-info\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    onClick: function onClick() {\n      return router.push('/');\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test-begin__button\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test-begin__button__bg\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"start\"\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"settings\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columns\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-message action-message--success\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"usernameChanged\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"changeUsername\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\"\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.username) {\n        errors.username = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"usernameRequired\"\n        });\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    render: function render(formProps) {\n      return /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"newUsername\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"text\",\n        name: \"username\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'username')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"username\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"change\"\n      })));\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"changePassword\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\"\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      old_password: '',\n      new_password: '',\n      new_password_again: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.old_password) {\n        errors.old_password = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"oldPasswordRequired\"\n        });\n      }\n\n      if (!values.new_password) {\n        errors.new_password = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"newPasswordRequired\"\n        });\n      }\n\n      if (values.new_password.length < 6) {\n        errors.new_password = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"minimumSixCharacter\"\n        });\n      }\n\n      if (!values.new_password_again) {\n        errors.new_password_again = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"newPasswordAgainRequired\"\n        });\n      }\n\n      if (values.new_password_again.length < 6) {\n        errors.new_password_again = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"minimumSixCharacter\"\n        });\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref2) {\n      var setSubmitting = _ref2.setSubmitting;\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    render: function render(formProps) {\n      return /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"oldPassword\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"password\",\n        name: \"old_password\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'old_password')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"old_password\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"newPassword\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"password\",\n        name: \"new_password\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'new_password')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"new_password\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"newPasswordAgain\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"text\",\n        name: \"new_password_again\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'new_password_again')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"new_password_again\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"changePassword\"\n      })));\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"changeEmail\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\"\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      email_again: '',\n      email: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.password) {\n        errors.password = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"passwordRequired\"\n        });\n      }\n\n      if (!values.email) {\n        errors.email = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"emailRequired\"\n        });\n      }\n\n      if (!values.email_again) {\n        errors.email_again = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"emailAgainRequired\"\n        });\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref3) {\n      var setSubmitting = _ref3.setSubmitting;\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    render: function render(formProps) {\n      return /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"newEmail\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"email\",\n        name: \"email\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'email')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"newEmailAgain\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"email\",\n        name: \"email_again\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'email_again')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"email_again\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"password\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"password\",\n        name: \"password\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'password')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"changeEmail\"\n      })));\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"generalSettings\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-settings\"\n  }, /*#__PURE__*/React.createElement(\"ul\", null, /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"time\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"time\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"12Hours\"\n  }))), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"time\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"24Hours\"\n  }))))), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"date\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"select\", null, /*#__PURE__*/React.createElement(\"option\", null, \"DD.MM.YYYY\"), /*#__PURE__*/React.createElement(\"option\", null, \"DD/MM/YYYY\"), /*#__PURE__*/React.createElement(\"option\", null, \"MM/DD/YYYY\"), /*#__PURE__*/React.createElement(\"option\", null, \"YYYY-MM-DD\")))), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"howFarLabel\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"Kilometre\")), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"Mil\")))), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"speedLabel\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"Mbps\")), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"MB/s\")), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"kB/s\")))), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"speedLabel02\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed-type\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"100M\")), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed-type\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"200M\")), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed-type\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"500M\")))), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"manuelServer\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"server\"\n  }, /*#__PURE__*/React.createElement(\"small\", null, \"Radore - \"), \" \\u0130stanbul\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"change-server\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-text\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"change\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-area-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-area\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeHolder: \"Ara\",\n    onChange: function onChange(e) {\n      return setKeyword(e.target.value);\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"closeServers\"\n  })), /*#__PURE__*/React.createElement(\"ul\", null, servers.filter(function (item) {\n    return item.server.toLowerCase().includes(keyword.toLowerCase().trim());\n  }).map(function (data) {\n    return /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, data.location), \" - \", data.server);\n  })))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"currentConnection\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subhead\"\n  }, \"Turkcell Superonline\"), /*#__PURE__*/React.createElement(\"p\", null, \"IPv4: 212.252.115.21\"), /*#__PURE__*/React.createElement(\"p\", null, \"\\u0130stanbul\"), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"lat\"\n  }), \": 41.0145 \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"lng\"\n  }), \": 28.5256\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  })))), /*#__PURE__*/React.createElement(Footer, null));\n}","map":null,"metadata":{},"sourceType":"module"}