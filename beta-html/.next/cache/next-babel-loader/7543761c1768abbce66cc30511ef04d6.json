{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Head from 'next/head';\nimport { FormattedMessage } from 'react-intl';\nimport { useRouter } from 'next/router';\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport { Formik, Form, Field, ErrorMessage, getIn } from 'formik';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction getStyles(errors, fieldName) {\n  if (getIn(errors, fieldName)) {\n    return {\n      borderColor: '#ff3366'\n    };\n  }\n}\n\nvar servers = [{\n  location: 'İstanbul',\n  server: 'Radore'\n}, {\n  location: 'İstanbul',\n  server: 'Doruknet'\n}, {\n  location: 'İstanbul',\n  server: 'Vodafone'\n}, {\n  location: 'İstanbul',\n  server: 'Turkcell Superonline'\n}, {\n  location: 'İstanbul',\n  server: 'Turknet'\n}, {\n  location: 'Bursa',\n  server: 'DGN Teknoloji'\n}, {\n  location: 'İstanbul',\n  server: 'Radore'\n}, {\n  location: 'İstanbul',\n  server: 'Doruknet'\n}, {\n  location: 'İstanbul',\n  server: 'Vodafone'\n}, {\n  location: 'İstanbul',\n  server: 'Turkcell Superonline'\n}, {\n  location: 'İstanbul',\n  server: 'Turknet'\n}, {\n  location: 'Bursa',\n  server: 'DGN Teknoloji'\n}];\nexport default function Settings() {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      keyword = _useState4[0],\n      setKeyword = _useState4[1];\n\n  var router = useRouter();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\"\n  }, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"title\", null, \"H\\u0131zTesti App - Ayarlar\"), /*#__PURE__*/React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: \"My page title\",\n    key: \"title\"\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: \"My page description\",\n    key: \"description\"\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  }), /*#__PURE__*/React.createElement(\"script\", {\n    async: true,\n    src: \"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"\n  })), /*#__PURE__*/React.createElement(Header, null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-page\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"speed-info\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    onClick: function onClick() {\n      return router.push('/');\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test-begin__button\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test-begin__button__bg\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"start\"\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"settings\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columns\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-message action-message--success\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"usernameChanged\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"changeUsername\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\"\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.username) {\n        errors.username = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"usernameRequired\"\n        });\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    render: function render(formProps) {\n      return /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"newUsername\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"text\",\n        name: \"username\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'username')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"username\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"change\"\n      })));\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"changePassword\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\"\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      old_password: '',\n      new_password: '',\n      new_password_again: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.old_password) {\n        errors.old_password = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"oldPasswordRequired\"\n        });\n      }\n\n      if (!values.new_password) {\n        errors.new_password = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"newPasswordRequired\"\n        });\n      }\n\n      if (values.new_password.length < 6) {\n        errors.new_password = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"minimumSixCharacter\"\n        });\n      }\n\n      if (!values.new_password_again) {\n        errors.new_password_again = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"newPasswordAgainRequired\"\n        });\n      }\n\n      if (values.new_password_again.length < 6) {\n        errors.new_password_again = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"minimumSixCharacter\"\n        });\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref2) {\n      var setSubmitting = _ref2.setSubmitting;\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    render: function render(formProps) {\n      return /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"oldPassword\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"password\",\n        name: \"old_password\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'old_password')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"old_password\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"newPassword\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"password\",\n        name: \"new_password\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'new_password')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"new_password\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"newPasswordAgain\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"text\",\n        name: \"new_password_again\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'new_password_again')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"new_password_again\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"changePassword\"\n      })));\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"changeEmail\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\"\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      email_again: '',\n      email: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.password) {\n        errors.password = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"passwordRequired\"\n        });\n      }\n\n      if (!values.email) {\n        errors.email = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"emailRequired\"\n        });\n      }\n\n      if (!values.email_again) {\n        errors.email_again = /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"emailAgainRequired\"\n        });\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref3) {\n      var setSubmitting = _ref3.setSubmitting;\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    render: function render(formProps) {\n      return /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"newEmail\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"email\",\n        name: \"email\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'email')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"newEmailAgain\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"email\",\n        name: \"email_again\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'email_again')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"email_again\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\"\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-label\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"password\"\n      })), /*#__PURE__*/React.createElement(Field, {\n        type: \"password\",\n        name: \"password\",\n        className: \"field-input\",\n        style: getStyles(formProps.errors, 'password')\n      })), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"error-input\"\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\"\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"changeEmail\"\n      })));\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"generalSettings\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-settings\"\n  }, /*#__PURE__*/React.createElement(\"ul\", null, /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"time\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"time\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"12Hours\"\n  }))), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"time\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"24Hours\"\n  }))))), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"date\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDate,\n    onChange: function onChange(date) {\n      return setStartDate(date);\n    },\n    className: \"datepicker\",\n    dateFormat: \"dd/MM/yyyy\"\n  }))), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"howFarLabel\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"Kilometre\")), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"Mil\")))), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"speedLabel\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"Mbps\")), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"MB/s\")), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"kB/s\")))), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"speedLabel02\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed-type\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"100M\")), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed-type\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"200M\")), /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"speed-type\"\n  }), /*#__PURE__*/React.createElement(\"span\", null, \"500M\")))), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"manuelServer\"\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"server\"\n  }, /*#__PURE__*/React.createElement(\"small\", null, \"Radore - \"), \" \\u0130stanbul\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"change-server\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-text\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"change\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-area-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-area\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeHolder: \"Ara\",\n    onChange: function onChange(e) {\n      return setKeyword(e.target.value);\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"closeServers\"\n  })), /*#__PURE__*/React.createElement(\"ul\", null, servers.filter(function (item) {\n    return item.server.toLowerCase().includes(keyword.toLowerCase().trim());\n  }).map(function (data) {\n    return /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"span\", null, data.location), \" - \", data.server);\n  })))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"currentConnection\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subhead\"\n  }, \"Turkcell Superonline\"), /*#__PURE__*/React.createElement(\"p\", null, \"IPv4: 212.252.115.21\"), /*#__PURE__*/React.createElement(\"p\", null, \"\\u0130stanbul\"), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"lat\"\n  }), \": 41.0145 \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"lng\"\n  }), \": 28.5256\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\"\n  })))), /*#__PURE__*/React.createElement(Footer, null));\n}","map":{"version":3,"sources":["/var/www/html/pages/profile.js"],"names":["Head","FormattedMessage","useRouter","React","useState","useEffect","DatePicker","Formik","Form","Field","ErrorMessage","getIn","Header","Footer","getStyles","errors","fieldName","borderColor","servers","location","server","Settings","Date","startDate","setStartDate","keyword","setKeyword","router","push","username","values","setSubmitting","setTimeout","alert","JSON","stringify","formProps","old_password","new_password","new_password_again","length","password","email_again","email","date","e","target","value","filter","item","toLowerCase","includes","trim","map","data"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport { FormattedMessage } from 'react-intl';\nimport { useRouter } from 'next/router'\nimport React, { useState, useEffect } from 'react';\n\nimport DatePicker from \"react-datepicker\";\nimport { Formik, Form, Field, ErrorMessage, getIn } from 'formik';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction getStyles(errors, fieldName) {\n  if (getIn(errors, fieldName)) {\n    return {\n      borderColor: '#ff3366'\n    }\n  }\n}\n\nconst servers = [\n  {\n    location: 'İstanbul',\n    server: 'Radore'\n  },\n  {\n    location: 'İstanbul',\n    server: 'Doruknet'\n  },  \n  {\n    location: 'İstanbul',\n    server: 'Vodafone'\n  },    \n  {\n    location: 'İstanbul',\n    server: 'Turkcell Superonline'\n  },      \n  {\n    location: 'İstanbul',\n    server: 'Turknet'\n  },        \n  {\n    location: 'Bursa',\n    server: 'DGN Teknoloji'\n  },\n  {\n    location: 'İstanbul',\n    server: 'Radore'\n  },\n  {\n    location: 'İstanbul',\n    server: 'Doruknet'\n  },  \n  {\n    location: 'İstanbul',\n    server: 'Vodafone'\n  },    \n  {\n    location: 'İstanbul',\n    server: 'Turkcell Superonline'\n  },      \n  {\n    location: 'İstanbul',\n    server: 'Turknet'\n  },        \n  {\n    location: 'Bursa',\n    server: 'DGN Teknoloji'\n  }\n];\n\n\nexport default function Settings() {\n  const [startDate, setStartDate] = useState(new Date());\n  const [keyword, setKeyword] = useState('');\n  const router = useRouter()\n\n  return (\n    <div className=\"page\">\n      <Head>\n        <title>HızTesti App - Ayarlar</title>\n        <meta property=\"og:title\" content=\"My page title\" key=\"title\" />\n        <meta property=\"og:description\" content=\"My page description\" key=\"description\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n      </Head>\n      <Header />\n        <div className=\"wrapper\">\n        <div className=\"settings-page\">\n        <div className=\"speed-info\">\n          <div className=\"col\">\n            <div className=\"button-container\" onClick={() => router.push('/')}>\n              <div className=\"test-begin__button\">\n                <div className=\"test-begin__button__bg\"></div>\n                <span><FormattedMessage id=\"start\" /></span>\n              </div>\n            </div>\n          </div>              \n        </div>        \n        <div className=\"settings-hero\"><FormattedMessage id=\"settings\" /></div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"action-message action-message--success\">\n                <FormattedMessage id=\"usernameChanged\" />\n              </div>                            \n              <div className=\"hero\"><FormattedMessage id=\"changeUsername\" /></div>\n              <div className=\"form\">\n                <Formik\n                  initialValues={{ username: '' }}\n                  validate={values => {\n                    const errors = {};\n                    if (!values.username) {\n                      errors.username = <FormattedMessage id=\"usernameRequired\" />;\n                    }\n                    return errors;\n                  }}\n                  onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n                      alert(JSON.stringify(values, null, 2));\n                      setSubmitting(false);\n                    }, 400);\n                  }}\n                  render={formProps => {\n                    return (\n                      <Form>\n                        <div className=\"field\">\n                          <label className=\"field-label\"><FormattedMessage id=\"newUsername\" /></label>\n                          <Field type=\"text\" name=\"username\" className=\"field-input\" style={getStyles(formProps.errors, 'username')} />\n                        </div>\n                        <ErrorMessage name=\"username\" component=\"div\" className=\"error-input\" />\n                        <button type=\"submit\">\n                          <FormattedMessage id=\"change\" />\n                        </button>\n                      </Form>\n                    );                \n                  }}\n                />\n              </div>                \n            </div>\n            <div className=\"column\">\n              <div className=\"hero\"><FormattedMessage id=\"changePassword\" /></div>\n              <div className=\"form\">\n                <Formik\n                  initialValues={{ old_password: '', new_password: '', new_password_again: '' }}\n                  validate={values => {\n                    const errors = {};\n                    if (!values.old_password) {\n                      errors.old_password = <FormattedMessage id=\"oldPasswordRequired\" />;\n                    }\n                    if (!values.new_password) {\n                      errors.new_password = <FormattedMessage id=\"newPasswordRequired\" />;\n                    }\n                    if (values.new_password.length < 6) {\n                      errors.new_password = <FormattedMessage id=\"minimumSixCharacter\" />;\n                    }                      \n                    if (!values.new_password_again) {\n                      errors.new_password_again = <FormattedMessage id=\"newPasswordAgainRequired\" />;\n                    }                                            \n                    if (values.new_password_again.length < 6) {\n                      errors.new_password_again = <FormattedMessage id=\"minimumSixCharacter\" />;\n                    }                                            \n                    return errors;\n                  }}\n                  onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n                      alert(JSON.stringify(values, null, 2));\n                      setSubmitting(false);\n                    }, 400);\n                  }}\n                  render={formProps => {\n                    return (\n                      <Form>\n                        <div className=\"field\">\n                          <label className=\"field-label\"><FormattedMessage id=\"oldPassword\" /></label>\n                          <Field type=\"password\" name=\"old_password\" className=\"field-input\" style={getStyles(formProps.errors, 'old_password')} />\n                        </div>\n                        <ErrorMessage name=\"old_password\" component=\"div\" className=\"error-input\" />\n                        <div className=\"field\">\n                          <label className=\"field-label\"><FormattedMessage id=\"newPassword\" /></label>\n                          <Field type=\"password\" name=\"new_password\" className=\"field-input\" style={getStyles(formProps.errors, 'new_password')} />\n                        </div>\n                        <ErrorMessage name=\"new_password\" component=\"div\" className=\"error-input\" />\n                        <div className=\"field\">\n                          <label className=\"field-label\"><FormattedMessage id=\"newPasswordAgain\" /></label>\n                          <Field type=\"text\" name=\"new_password_again\" className=\"field-input\" style={getStyles(formProps.errors, 'new_password_again')} />\n                        </div>\n                        <ErrorMessage name=\"new_password_again\" component=\"div\" className=\"error-input\" />                                                    \n                        <button type=\"submit\">\n                          <FormattedMessage id=\"changePassword\" />\n                        </button>\n                      </Form>\n                    );                \n                  }}\n                />\n              </div>                  \n            </div>\n            <div className=\"column\">\n              <div className=\"hero\"><FormattedMessage id=\"changeEmail\" /></div>\n              <div className=\"form\">\n                <Formik\n                  initialValues={{ password: '', email_again: '', email: '' }}\n                  validate={values => {\n                    const errors = {};\n                    if (!values.password) {\n                      errors.password = <FormattedMessage id=\"passwordRequired\" />;\n                    }\n                    if (!values.email) {\n                      errors.email = <FormattedMessage id=\"emailRequired\" />;\n                    }\n                    if (!values.email_again) {\n                      errors.email_again = <FormattedMessage id=\"emailAgainRequired\" />;\n                    }                                                             \n                    return errors;\n                  }}\n                  onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n                      alert(JSON.stringify(values, null, 2));\n                      setSubmitting(false);\n                    }, 400);\n                  }}\n                  render={formProps => {\n                    return (\n                      <Form>\n                        <div className=\"field\">\n                          <label className=\"field-label\"><FormattedMessage id=\"newEmail\" /></label>\n                          <Field type=\"email\" name=\"email\" className=\"field-input\" style={getStyles(formProps.errors, 'email')} />\n                        </div>\n                        <ErrorMessage name=\"email\" component=\"div\" className=\"error-input\" />\n                        <div className=\"field\">\n                          <label className=\"field-label\"><FormattedMessage id=\"newEmailAgain\" /></label>\n                          <Field type=\"email\" name=\"email_again\" className=\"field-input\" style={getStyles(formProps.errors, 'email_again')} />\n                        </div>\n                        <ErrorMessage name=\"email_again\" component=\"div\" className=\"error-input\" />\n                        <div className=\"field\">\n                          <label className=\"field-label\"><FormattedMessage id=\"password\" /></label>\n                          <Field type=\"password\" name=\"password\" className=\"field-input\" style={getStyles(formProps.errors, 'password')} />\n                        </div>\n                        <ErrorMessage name=\"password\" component=\"div\" className=\"error-input\" />                                                    \n                        <button type=\"submit\">\n                          <FormattedMessage id=\"changeEmail\" />\n                        </button>\n                      </Form>\n                    );                \n                  }}\n                />\n              </div>                   \n            </div>                            \n            <div className=\"column\">\n              <div className=\"hero\"><FormattedMessage id=\"generalSettings\" /></div>\n              <div className=\"site-settings\">\n                <ul>\n                  <li>\n                    <span><FormattedMessage id=\"time\" /></span>\n                    <div>\n                      <label>\n                        <input type=\"radio\" name=\"time\" />\n                        <span><FormattedMessage id=\"12Hours\" /></span>\n                      </label>\n                      <label>\n                        <input type=\"radio\" name=\"time\" />\n                        <span><FormattedMessage id=\"24Hours\" /></span>\n                      </label>                      \n                    </div>\n                  </li>\n                  <li>\n                    <span><FormattedMessage id=\"date\" /></span>\n                    <div>\n                      <DatePicker selected={startDate} onChange={date => setStartDate(date)} className=\"datepicker\"  dateFormat=\"dd/MM/yyyy\" />\n                    </div>\n                  </li>  \n                  <li>\n                    <span><FormattedMessage id=\"howFarLabel\" /></span>\n                    <div>\n                      <label>\n                        <input type=\"radio\" name=\"type\" />\n                        <span>Kilometre</span>\n                      </label>          \n                      <label>\n                        <input type=\"radio\" name=\"type\" />\n                        <span>Mil</span>\n                      </label>                                \n                    </div>\n                  </li>  \n                  <li>\n                    <span><FormattedMessage id=\"speedLabel\" /></span>\n                    <div>\n                      <label>\n                        <input type=\"radio\" name=\"speed\" />\n                        <span>Mbps</span>\n                      </label>          \n                      <label>\n                        <input type=\"radio\" name=\"speed\" />\n                        <span>MB/s</span>\n                      </label>\n                      <label>\n                        <input type=\"radio\" name=\"speed\" />\n                        <span>kB/s</span>\n                      </label>                                                      \n                    </div>\n                  </li>  \n                  <li>\n                    <span><FormattedMessage id=\"speedLabel02\" /></span>\n                    <div>\n                      <label>\n                        <input type=\"radio\" name=\"speed-type\" />\n                        <span>100M</span>\n                      </label>          \n                      <label>\n                        <input type=\"radio\" name=\"speed-type\" />\n                        <span>200M</span>\n                      </label>\n                      <label>\n                        <input type=\"radio\" name=\"speed-type\" />\n                        <span>500M</span>\n                      </label>                                                      \n                    </div>\n                  </li> \n                  <li>\n                    <span><FormattedMessage id=\"manuelServer\" /></span>\n                    <div>\n                      <div className=\"server\">\n                        <small>Radore - </small> İstanbul\n                      </div>           \n                      <div className=\"change-server\">\n                        <div className=\"label-text\"><FormattedMessage id=\"change\" /></div>\n                        <div className=\"list-area-container\">\n                          <div className=\"list-area\">\n                            <div className=\"search\">\n                              <input type=\"text\" placeHolder=\"Ara\" onChange={e => setKeyword(e.target.value)} />\n                            </div>                        \n                              <div className=\"label\">\n                                <FormattedMessage id=\"closeServers\" />\n                              </div>\n                              <ul>\n                                {servers.filter(item => item.server.toLowerCase().includes(keyword.toLowerCase().trim())).map(data => {\n                                  return (\n                                    <li><span>{data.location}</span> - {data.server}</li>\n                                  );\n                                })}\n                              </ul>\n                          </div>                          \n                        </div>                      \n                      </div>                                         \n                    </div>\n                  </li>                                                                                          \n                </ul>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"hero\"><FormattedMessage id=\"currentConnection\" /></div>\n              <div className=\"subhead\">Turkcell Superonline</div>\n              <p>IPv4: 212.252.115.21</p>\n              <p>İstanbul</p>\n              <p><FormattedMessage id=\"lat\" />: 41.0145 <FormattedMessage id=\"lng\" />: 28.5256</p>\n            </div>                             \n            <div className=\"column\" />\n          </div>\n        </div>\n        </div>\n      <Footer />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}