{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { cookiePolicy, acceptLanguagePolicy, defaultPolicy } from '@moxy/next-intl';\nexport default {\n  locales: [{\n    id: 'en-US',\n    code: 'EN',\n    icon: 'https://hatscripts.github.io/circle-flags/flags/us.svg',\n    name: 'English',\n    loadMessages: function () {\n      var _loadMessages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var module;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return import('./messages/en-US.json');\n\n              case 2:\n                module = _context.sent;\n                return _context.abrupt(\"return\", module[\"default\"]);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function loadMessages() {\n        return _loadMessages.apply(this, arguments);\n      }\n\n      return loadMessages;\n    }()\n  }, {\n    id: 'tr-TR',\n    code: 'TR',\n    icon: 'https://hatscripts.github.io/circle-flags/flags/tr.svg',\n    name: 'Turkish',\n    loadMessages: function () {\n      var _loadMessages2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var module;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return import('./messages/tr-TR.json');\n\n              case 2:\n                module = _context2.sent;\n                return _context2.abrupt(\"return\", module[\"default\"]);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadMessages() {\n        return _loadMessages2.apply(this, arguments);\n      }\n\n      return loadMessages;\n    }()\n  }],\n  defaultLocale: 'tr-TR',\n  policies: [cookiePolicy(), acceptLanguagePolicy(), defaultPolicy('tr-TR')]\n};","map":{"version":3,"sources":["/var/www/html/intl/index.js"],"names":["cookiePolicy","acceptLanguagePolicy","defaultPolicy","locales","id","code","icon","name","loadMessages","module","defaultLocale","policies"],"mappings":";;AAAA,SAASA,YAAT,EAAuBC,oBAAvB,EAA6CC,aAA7C,QAAkE,iBAAlE;AAEA,eAAe;AACXC,EAAAA,OAAO,EAAE,CACL;AACIC,IAAAA,EAAE,EAAE,OADR;AAEIC,IAAAA,IAAI,EAAE,IAFV;AAGIC,IAAAA,IAAI,EAAE,wDAHV;AAIIC,IAAAA,IAAI,EAAE,SAJV;AAKIC,IAAAA,YAAY;AAAA,mFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACW,OAAO,uBAAP,CADX;;AAAA;AACJC,gBAAAA,MADI;AAAA,iDAEHA,MAAM,WAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AALhB,GADK,EAWL;AACIL,IAAAA,EAAE,EAAE,OADR;AAEIC,IAAAA,IAAI,EAAE,IAFV;AAGIC,IAAAA,IAAI,EAAE,wDAHV;AAIIC,IAAAA,IAAI,EAAE,SAJV;AAKIC,IAAAA,YAAY;AAAA,oFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACW,OAAO,uBAAP,CADX;;AAAA;AACJC,gBAAAA,MADI;AAAA,kDAEHA,MAAM,WAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AALhB,GAXK,CADE;AAuBXC,EAAAA,aAAa,EAAE,OAvBJ;AAwBXC,EAAAA,QAAQ,EAAE,CACNX,YAAY,EADN,EAENC,oBAAoB,EAFd,EAGNC,aAAa,CAAC,OAAD,CAHP;AAxBC,CAAf","sourcesContent":["import { cookiePolicy, acceptLanguagePolicy, defaultPolicy } from '@moxy/next-intl';\n\nexport default {\n    locales: [\n        {\n            id: 'en-US',\n            code: 'EN',\n            icon: 'https://hatscripts.github.io/circle-flags/flags/us.svg',\n            name: 'English',\n            loadMessages: async () => {\n                const module = await import('./messages/en-US.json');\n                return module.default;\n            },\n        },\n        {\n            id: 'tr-TR',\n            code: 'TR',\n            icon: 'https://hatscripts.github.io/circle-flags/flags/tr.svg',\n            name: 'Turkish',\n            loadMessages: async () => {\n                const module = await import('./messages/tr-TR.json');\n                return module.default;\n            },\n        },        \n    ],\n    defaultLocale: 'tr-TR',\n    policies: [\n        cookiePolicy(),\n        acceptLanguagePolicy(),\n        defaultPolicy('tr-TR'),\n    ],\n};\n"]},"metadata":{},"sourceType":"module"}